1.
CREATE TABLE TB_PROFILE (
NAME VARCHAR (20) NOT NULL,
ACT_VIEW CHAR (1) NOT NULL,
ACT_EDIT CHAR (1) NOT NULL,
ACT_DELETE CHAR (1) NOT NULL,
PRIMARY KEY (NAME),
CONSTRAINT CHECK_ACT_DELETE CHECK (ACT_DELETE IN (0, 1)),
CONSTRAINT CHECK_ACT_EDIT CHECK (ACT_EDIT IN (0, 1)),
CONSTRAINT CHECK_ACT_VIEW CHECK (ACT_VIEW IN (0, 1))
);
2.
CREATE TABLE TB_USER (
EMAIL VARCHAR (40) NOT NULL,
PASSWORD VARCHAR (40) NOT NULL,
NAME VARCHAR (40),
CPF VARCHAR (14) NOT NULL,
SALARY FLOAT (9),
DEPARTMENT VARCHAR (20),
PROFILE VARCHAR (20) NOT NULL,
PRIMARY KEY (CPF),
FOREIGN KEY (PROFILE) REFERENCES TB_PROFILE (NAME)
);
3.
CREATE TABLE TB_PHONE (
TYP VARCHAR (10),
OPER VARCHAR (15),
NUMBR VARCHAR (16) NOT NULL,
CPF VARCHAR (14) NOT NULL,
PRIMARY KEY (NUMBR),
FOREIGN KEY (CPF) REFERENCES TB_USER (CPF)
);
4.
CREATE TABLE TB_ADRESS (
ID NUMBER NOT NULL,
TYP VARCHAR (40),
NUMBR VARCHAR (10),
STREET VARCHAR (40),
NEIGHB VARCHAR (40),
CITY VARCHAR (40),
STATEOF VARCHAR (40),
COUNTRY VARCHAR (40),
COMPL VARCHAR (40),
ZIPCODE VARCHAR (40),
CPF VARCHAR (14) NOT NULL,
PRIMARY KEY (ID),
FOREIGN KEY (CPF) REFERENCES TB_USER (CPF)
);
5.
CREATE OR REPLACE TRIGGER TB_USER_TO_LOW 
before INSERT OR UPDATE OF EMAIL ON TB_USER
for each row
BEGIN
  :new.email := lower(:new.email);
END;
6.
CREATE OR REPLACE TRIGGER TB_USER_TO_UPPER 
before INSERT OR UPDATE OF PROFILE ON TB_USER
for each row
BEGIN
  :new.profile := upper(:new.profile);
END;
7.
create sequence SEQ_ADRESS
start with 1
increment by 1
maxvalue 99999
minvalue 0;
8.
INSERT INTO TB_PROFILE (NAME, ACT_VIEW, ACT_EDIT, ACT_DELETE)
VALUES ('BOSS', '1','1','1');
9.
INSERT INTO TB_PROFILE (NAME, ACT_VIEW, ACT_EDIT, ACT_DELETE)
VALUES ('SECRETARY', '1', '1','0');
10.
INSERT INTO TB_PROFILE (NAME, ACT_VIEW, ACT_EDIT, ACT_DELETE)
VALUES ('COMMON', '1', '0', '0');
11.
INSERT INTO TB_USER (EMAIL, NAME, PASSWORD, CPF, PROFILE)
VALUES ('BOSS@company.com', 'admin', '123456','123.456.789-00', 'BOSS');



